name: Release

on:
  workflow_dispatch:
    inputs:
      build-version:
        required: true
        description: "Release version and its future tag (ex. 1.0.0)"
      release-pypi:
        required: true
        default: true
        type: boolean
        description: "Release the Python package to PyPI"
      release-ghcr:
        required: true
        default: true
        type: boolean
        description: "Release the Docker image to GHCR"
      release-github:
        required: true
        default: true
        type: boolean
        description: "Draft release on GitHub"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pypi:
    name: Publish Python package on PyPI
    if: ${{ inputs.release-pypi }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Flit
        run: python -m pip install flit

      - name: Build package
        run: python -m flit build
        env:
          BUILD_VERSION: ${{ inputs.build-version }}

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  ghcr:
    name: Publish Docker image on GHCR
    if: ${{ inputs.release-ghcr }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract generic image metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.build-version }}

      - name: Build and push generic Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: BUILD_VERSION=${{ inputs.build-version }}

      - name: Extract API image metadata for Docker
        id: meta-api
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.build-version }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile_Api
          push: true
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          build-args: BUILD_VERSION=${{ inputs.build-version }}

  github:
    name: Draft release on GitHub
    if: ${{ inputs.release-github }}
    needs: [pypi, ghcr]
    runs-on: ubuntu-22.04
    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: "Release v${{ inputs.build-version }}"
          tag_name: v${{ inputs.build-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}